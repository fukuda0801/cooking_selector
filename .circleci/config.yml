version: 2.1

orbs:
  ruby: circleci/ruby@1.1
  heroku: circleci/heroku@1.2.6

jobs:
  build_and_test:
    docker:
      - image: cimg/ruby:3.1.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      - run:
          name: Build and Run Containers
          command: |
            docker-compose -f docker-compose.ci.yml up --build -d
      - run:
          name: Wait for DB
          command: |
            docker-compose -f docker-compose.ci.yml run --rm web dockerize -wait tcp://db:3306 -timeout 1m
      - run:
          name: Add node_modules/.bin to PATH
          command: echo 'export PATH="$PATH:./node_modules/.bin"' >> $BASH_ENV
      - run:
          name: Create Database
          command: |
            docker-compose -f docker-compose.ci.yml run --rm web bundle exec rails db:create
      - run:
          name: assets compile
          command: |
            docker-compose -f docker-compose.ci.yml run --rm web bundle exec rake assets:precompile
      - run:
          name: Load Database Schema
          command: |
            docker-compose -f docker-compose.ci.yml run --rm web bundle exec rails db:schema:load
      - run:
          name: Run Tests
          command: |
            docker-compose -f docker-compose.ci.yml run --rm web bundle exec rspec
      - run:
          name: Check Coding Style
          command: |
            docker-compose -f docker-compose.ci.yml run --rm web bundle exec rubocop
      - run:
          name: Shutdown Docker Containers
          command: |
            docker-compose -f docker-compose.ci.yml down

  deploy:
    docker:
      - image: cimg/ruby:3.1.0
    steps:
      - checkout
      - heroku/install
      - run:
          name: Deploy to Heroku
          command: |
            heroku git:remote -a $HEROKU_APP_NAME
            git push heroku $CIRCLE_BRANCH:main

workflows:
  version: 2
  build_deploy:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
